Test Cases

	Enable - Kathryn 
	================
  Scenario: Verify disabled account is then enabled
  Test Step: Admin enables an account which is disabled.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
  Expected result: Command is accepted.
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
  
  Scenario: Verify no enable on already enabled account
  Test Step: Admin enables an account which does not need enabling
  Test Input:
        login
        admin
        enable
        John Doe
        12345
  Expected Result: Command is rejected.
  Expected Output: - Print: [TODO: after filled everything out]
           - File: "No change"
  
  Scenario: Verify no enable on deleted account
  Test Step: Admin enables an account that no longer exists.
  Test Input:
        login
        admin
        delete
        Bran Bob
        12347
        enable
        Bran Bob
        12347
  Expected Result: Command is rejected
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
  
  Scenario: Verify normal users can not access the enable feature.
  Test Step: Normal user attempts to use the enable feature.
  Test Input:
        login
        standard
        John Doe
        enable
  Expected Result: The command is rejected.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a login name: "
           - Print: "Please enter a command user: "
           - Print: "Error, you do not have the correct privileges to access this feature."
           - File: "No change"
  
  Scenario: Verify account holder's name and account number correspond with each other (Incorrect name, correct number).
  Test Step: Admin enters an incorrect account holder's name but correct account number.
  Test Input: 
        login
        admin
        enable
        Bob Stevenson
        12345
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
             
             
  Scenario: Verify account holder's name and account number correspond with each other (Correct name, incorrect number).
  Test Step: Admin enters a correct account holder's name but incorrect account number.
  Test Input: 
        login
        admin
        enable
        Bran Bob
        11111
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
                     
  Scenario: Verify account holder's name and account number correspond with each other (Correct name, correct number but not matching).
  Test Step: Admin enters a correct account holder and correct account number but they do not correspond to each other.
  Test Input: 
        login
        admin
        enable
        Bran Bob
        12346
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
                     
                     
  Scenario: Verify user withdraw transaction can now be done to a re-enabled account.
  Test Step: Admin enables an account and then withdraws from it.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
        withdraw
        Bran Bob
        12347
        5.00
  Expected Result: 5 dollars is withdrawn.
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
  
  Scenario: Verify user deposit transaction can now be done to a re-enabled account.
  Test Step: Admin enables an account and then performs a deposit.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
        deposit
        Bran Bob
        12347
        5.00
  Expected Result: 5 dollars is added to the account.
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
  
  
  Scenario: Verify user paybill transaction can now be done to a re-enabled account.
  Test Step: Admin enables an account and then pays a bill.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
        paybill
        Bran Bob
        12347
        'TV'
        10.0
  Expected Result: 10 dollars is paid to TV
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
        
        
  
  [TODO: is disabling an account a requirement for deletion?]
  Scenario: Verify delete transaction can no longer be done to a re-enabled account.
  Test Step: Enter the re-enabled account's correct account holder's name and account number in the delete feature.
  Test Input: login
        admin
        enable
        Bran Bob
        12347
        delete
        Bran Bob
        12347
  Expected Result: Command is denied because the account is deleted.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: [*TODO @Kathryn after talk to Akira: output message for deleting non-disabled account]
           - File: No change
  
  Scenario: Verify user transfer transaction can now be done with a re-enabled account (From an account to a re-enabled account).
  Test Step: Admin enables an account, then transfers money to it.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
        transfer
        John Doe
        12345
        12347
        10.0
  Expected Result: enabled account gets 10.0
  Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
        
  
  Scenario: Verify user transfer transaction can now be done with a re-enabled account (From a re-enabled account to another account).
  Test Step: Admin enables an account, then has money transferred from it.
  Test Input:
        login
        admin
        enable
        Bran Bob
        12347
        transfer
        Bran Bob
        12347
        12345
        10.00
   Expected Result: enabled account transfers 10.0
   Expected Output: - Print: [TODO: after filled everything out]
           - File: [TODO: after filled everything out]
             
	Withdrawal - Kathryn
	================
  [* Login/logout issues covered elsewhere?]
  Scenario: Verify account holder's name and account number correspond with each other (Incorrect name, correct number).
  Test Step: Admin enters an incorrect account holder's name but correct account number.
  Test Input: 
        login
        admin
        withdrawal
        Bob Stevenson
        12345
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
             
             
  Scenario: Verify account holder's name and account number correspond with each other (Correct name, incorrect number).
  Test Step: Admin enters a correct account holder's name but incorrect account number.
  Test Input: 
        login
        admin
        withdrawal
        Bran Bob
        11111
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
                     
  Scenario: Verify account holder's name and account number correspond with each other (Correct name, correct number but not matching).
  Test Step: Admin enters a correct account holder and correct account number but they do not correspond to each other.
  Test Input: 
        login
        admin
        withdrawal
        Bran Bob
        12346
  Expected Result: The admin is notified the account is not valid.
  Expected Output: - Print: "Please enter your session type: "
           - Print: "Please enter a command admin: "
           - Print: "Please enter the account holder's name: "
           - Print: "Please enter the account number: "
           - Print: "Error, account specificed is not a valid account."
           - File: No change.
           
  Scenario: Verify standard mode user's name and account number correspond with each other (Correct name, incorrect number).
  Test Step: Logged in user enters an incorrect number
  Test Input:
        login
        John Doe
        withdrawal
        12340
  Expected Result: The account number is rejected.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]
        
  
  Scenario: Verify standard mode user's name and held account number correspond with each other (Correct name, correct number but not matching).
  Test Step: Logged in user enters a number to an account that does not belong to them.
  Test Input:
        login
        John Doe
        withdrawal
        12347
  Expected Result: The account number is rejected. [Note: should be identical to nonexistent account]
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]

  Scenario: Verify negative dollars input is rejected for admin
  Test Step: Try to enter a negative value as an admin.
  Test Input:
        login
        admin
        withdrawal
        John Doe
        12345
        -40.00
  Expected Result: Admin is informed that negative values are invalid.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]
  
  Scenario: Verify negative dollars input is rejected for user [TODO]
  
  Scenario: Verify input dollars of $0 is rejected for admin
  Test Step: Try to enter a zero value as an admin.
  Test Input:
        login
        admin
        withdrawal
        John Doe
        12345
        0.00
  Expected Result: Admin is informed that zero values are invalid.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]
  
  Scenario: Verify input dollars of $0 is rejected for user [TODO]
  
  Scenario: Verify dollar input ######.## is rejected
  Test Step: Try to enter an excessive value as a user.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        654321.00
  Expected Result: User is informed that their format is invalid.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]
         
  Scenario: Verify withdrawal input of .##
  Test Step: Try to enter a truncated decimal as a user.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        .50
  Expected Result: User is informed that their format is invalid.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: [TODO: after filled everything out]
  
  Scenario: Verify input of #
  Test Step: Try to enter a number without a decimal point as a user
  Test Input:
        login
        John Doe
        withdrawal
        12345
        5
  Expected Result: User is informed that a decimal point is required.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of $######.## is rejected
  Test Step: Try to enter a number with preceding dollar sign.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        $5.00
  Expected Result: User is informed that dollar signs are not acceptable.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of ######.##$ is rejected
  Test Step: Try to enter a number with trailing dollar sign.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        5.00$
  Expected Result: User is informed that dollar signs are not acceptable.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of ######,## is rejected
  Test Step: Try to enter a number with comma delimiters.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        5,00
  Expected Result: User is reminded to use . to represent decimal
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
         
  Scenario: Verify withdrawal input of ###### ## is rejected
  Test Step: Try to enter a number with space delimiters.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        5 00
  Expected Result: User is informed not to put spaces between their numbers.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of ######.### is rejected
  Test Step: Try to enter a number with 3 fractional parts
  Test Input:
        login
        John Doe
        withdrawal
        12345
        5.123
  Expected Result: User is reminded to only use 2 fineness.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of 0000#.## is rejected
  Test Step: Enter a number with preceding zeroes.
  Test Input:
        login
        John Doe
        withdrawal
        12345
        00005.12
  Expected Result: User is informed that their number doesn't make sense.
  Expected Output: - Print: [TODO: after filled everything out]
         - File: "No change"
  
  Scenario: Verify withdrawal input of ######.# is rejected
  Test Step: Enter a number like 20.0
  
  Scenario: Verify withdrawal input of ######.## (legit) is accepted
  Test Step: Enter a number like 20.00
  
  Scenario: Verify dollar value of <$5 is rejected
  Test Step: Enter a number like 4.99
  
  Scenario: Verify dollar value of $5 is accepted
  Test Step: Try to withdraw 5.00 in user mode
  
  Scenario: Verify composite dollar value (mixed bills) is accepted
  Test Step: Try to withdraw 15.00
  
  Scenario: Verify dollar value of $5 + invalid is rejected
  Test Step: Try to withdraw 7.00
  
  Scenario: Verify single account withdraw limit cannot be excceded
  
  Scenario: Verify single account withdraw limit cannot be exceeded (for multiple calls)
  Scenario: Verify single account withdraw limit cannot be exceeded (for multiple sessions)
  Scenario: Verify withdrawal transaction fee is applied for standard
  Scenario: Verify several withdrawal tranasaction fees are applied for several calls
  Scenario: Verify single account withdraw limit for admins doesn't apply
  Scenario: Verify single account withdraw limit for admins does not incur transaction fee
  Scenario: Verify separate account limits are separate with 1st rejected at limit and 2nd accepted
  Scenario: Verify separate account limits are separate with both accepted for amount over limit
  Scenario: Verify separate account limits are separate with both accepted
  Scenario: Verify admin withdrawals before user withdrawal does not affect limit
  Scenario: Verify admin withdrawals after user withdrawal does not come into confict with limit
  Scenario: Verify withdrawal with resulting positive balance is accepted
  Scenario: Verify withdrawal balance check accounts for withdrawal transaction fee
  Scenario: Verify withdrawal with resulting zero balance is accepted
  Scenario: Verify withdrawal with resulting negative balance is rejected
  Scenario: Verify withdrawal with resulting negative balance accounts is rejected (for previous transaction fee from previous withdrawal)
  Scenario: Verify withdrawal with resulting negative balance accounts is rejected (for previous transaction fee from previous transfer)
  Scenario: Verify withdrawal with resulting negative balance accounts is rejected (for previous transaction fee from previous paybill)
  Scenario: Verify withdrawal with resulting negative balance accounts is rejected (for previous transaction fee from previous deposit)
  Scenario: Verify withdrawal for resulting negative balance is rejected (on last of multiple calls)
  Scenario: Verify withdrawal for resulting zero balance is rejected (on last of multiple calls)
  Scenario: Verify withdrawal for resulting positive balance is accepted (on last of multiple calls)
  Scenario: Verify withdrawal for resulting negative balance is rejected (over multiple sessions)
  Scenario: Verify withdrawal for resulting zero balance is rejected (over multiple sessions)
  Scenario: Verify withdrawal for resulting positive balance is accepted (over multiple sessions)
  Scenario: Verify withdrawal for resulting negative balance is rejected (after session as different user)
  Scenario: Verify withdrawal for resulting zero balance is rejected (after session as different user)
  Scenario: Verify withdrawal for resulting positive balance is accepted (after session as different user)
  Scenario: Verify withdrawal for resulting negative balance is rejected (as admin)
  Scenario: Verify withdrawal for resulting zero balance is rejected (as admin)
  Scenario: Verify withdrawal for resulting positive balance is accepted (as admin)

	Paybill - Kathryn
	================
  [* Login/logout issues covered elsewhere?]
  [* CP most from withdraw ]
  Scenario: Verify EC is accepted in standard mode
  Scenario: Verify CQ is accepted in standard mode
  Scenario: Verify TV is accepted in standard mode
  Scenario: Verify EC is accepted in admin mode
  Scenario: Verify CQ is accepted in admin mode
  Scenario: Verify TV is accepted in admin mode
  Scenario: Verify invalid 2 letter is not accepted in standard mode
  Scenario: Verify 3 letter is not accepted in standard mode
  Scenario: Verify 1 letter is not accepted in standard mode
  Scenario: Verify truncated 3 letter is not accepted in standard mode
  Scenario: Verify invalid 2 letter is not accepted in admin mode
  Scenario: Verify 3 letter is not accepted in admin mode
  Scenario: Verify 1 letter is not accepted in admin mode
  Scenario: Verify truncated 3 letter is not accepted in admin mode
  Scenario: Verify lowercase ec is accepted in standard mode
  Scenario: Verify lowercase cq is accepted in standard mode
  Scenario: Verify lowercase tv is accepted in standard mode
  Scenario: Verify reversal, CE is not accepted in standard mode

	Deposit - Kathryn
	================
  [* Login/logout issues covered elsewhere?]
  [* CP most from withdraw ]
  Scenario: Verify deposited funds cannot be withdrawn
  Scenario: Verify deposited funds cannot be used with paybill
  Scenario: Verify deposited funds cannot be transferred from deposited account to account
  Scenario: Verify deposited funds cannot be transferred from account to deposited account
  
  

	Change Plan - Akira
	================

		Scenario: Verify account holder's name and account number correspond with each other (Incorrect name, correct number).
		Test Step: Admin enters an incorrect account holder's name but correct account number.
		Test Input: 
					login
					admin
					changeplan
					Bob Stevenson
					12345
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, incorrect number).
		Test Step: Admin enters a correct account holder's name but incorrect account number.
		Test Input: 
					login
					admin
					changeplan
					John Doe
					11111
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, correct number but not matching).
		Test Step: Admin enters a correct account holder and correct account number but they do not correspond to each other.
		Test Input: 
					login
					admin
					changeplan
					John Doe
					12346
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify admin can change an account from SP (student) to NP (non-student). 
		Test Step: Admin enters a correct account holder, correct account number and they do correspond to each other.
		Test Input: 
					login
					admin
					changeplan
					John Doe
					12345
		Expected Result: The information is saved to the bank account transaction file saying that the account payment plan is now NP (non-student).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, John Doe is now on a non-student payment plan."
						 - File: "08 John Doe             12345 00000000 00"
	
		Scenario: Verify admin can change an account from NP (non-student) to SP (student). 
		Test Step: Admin enters a correct account holder, correct account number and they do correspond to each other.
		Test Input:
					login
					admin
					changeplan
					Matt Cow
					12346
		Expected Result: The information is saved to the bank account transaction file saying that the account payment plan is now SP (student).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, Matt Cow is now on a student payment plan."
						 - File: "08 Matt Cow             12346 00000000 00"

		Scenario: Verify normal users can not access the changeplan feature.
		Test Step: Normal user attempts to use the changeplan feature.
		Test Input:
					login
					standard
					John Doe
					changeplan
		Expected Result: The command is rejected.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Error, you do not have the correct privileges to access this feature."
						 - File: "No change"
		
	Disable - Akira
	================

		Scenario: Verify account holder's name and account number correspond with each other (Incorrect name, correct number).
		Test Step: Admin enters an incorrect account holder's name but correct account number.
		Test Input: 
					login
					admin
					disable
					Bob Stevenson
				    12345
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, incorrect number).
		Test Step: Admin enters a correct account holder's name but incorrect account number.
		Test Input: 
					login
					admin
					disable
					John Doe
					11111
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, correct number but not matching).
		Test Step: Admin enters a correct account holder and correct account number but they do not correspond to each other.
		Test Input: 
					login
					admin
					disable
					John Doe
					12346
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.

		Scenario: Verify normal users can not access the disable feature.
		Test Step: Normal user attempts to use the disable feature.
		Test Input:
					login
					standard
					John Doe
					disable
		Expected Result: The command is rejected.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Error, you do not have the correct privileges to access this feature."
						 - File: No change.
		
		Scenario: Verify admin can change an account from A (active) to D (disabled). 
		Test Step: Admin enters a correct account holder, correct account number and they do correspond to each other.
		Test Input: 
					login
					admin
					disable
					John Doe
					12345
		Expected Result: The information is saved to the bank account transaction file saying that the account is now disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, John Doe's account is now disabled."
						 - File: "07 John Doe             12345 00000000 00"
				
		Scenario: Verify user withdraw transaction can no longer be done to a disabled account - user. 
		Test Step: Enter the disabled account's correct account holder's name, account number, and an amount of money in the withdraw feature.
		Test Input: login
					standard
					Bran Bob
					withdrawal
					12347
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Enter the amount of money you wish to withdraw: "
						 - Print: "Error, your account is disabled."
						 - File: No change
		
		Scenario: Verify user deposit transaction can no longer be done to a disabled account - user. 
		Test Step: Enter the disabled account's correct account holder's name, account number, and an amount of money in the deposit feature.
		Test Input: login
					standard
					Bran Bob
					deposit
					12347
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Enter the amount of money you wish to deposit: "
						 - Print: "Error, your account is disabled."
						 - File: No change
		
		Scenario: Verify user paybill transaction can no longer be done to a disabled account - user. 
		Test Step: Enter the disabled account's correct account holder's name, account number, company, and an amount of money to pay in the paybill feature.
		Test Input: login
					standard
					Bran Bob
					paybill
					12347
					The Bright Light Electric Company (EC)
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Please enter the company you wish to pay to: "
						 - Print: "Enter the amount of money you wish to pay: "
						 - Print: "Error, your account is disabled."
						 - File: No change
		
		Scenario: Verify delete transaction can still be done to a disabled account - user. 
		Test Step: Enter the disabled account's correct account holder's name and account number in the delete feature.
		Test Input: login
					admin
					delete
					Bran Bob
					12347
		Expected Result: Disabled account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, account has been deleted."
						 - File: "06 John Doe             12345 00000000 00"
		
		Scenario: Verify disable transaction can no longer be done to a disabled account - user. 
		Test Step: Enter the disabled account's correct account holder's name and account number in the disable feature.
		Test Input: login
					admin
					disable
					Bran Bob
					12347
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account is already disabled"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a disabled account (From an account to a disabled account) - user.  
		Test Step: Enter the disabled account's correct account holder's name and account number, another account number and an amount of money in the transfer feature.
		Test Input: login
					standard
					Bran Bob
					transfer
					12347
					12345
					100
		Expected Result: Command is denied because the account is disabled (disabled precedes valid account) - user.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, your account is disabled"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a disabled account (From a disabled account to another account) - user. 
		Test Step: Enter an account holder's name, account number, the disabled account number, and an amount of money in the transfer feature.
		Test Input: login
					standard
					John Doe
					transfer
					12345
					12347
					100
		Expected Result: Command is denied because the account is disabled (disabled precedes valid account).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account is disabled"
						 - File: No change

		Scenario: Verify user withdraw transaction can no longer be done to a disabled account - admin. 
		Test Step: Enter the disabled account's correct account holder's name, account number, and an amount of money in the withdraw feature.
		Test Input: login
					admin
					withdrawal
					Bran Bob
					12347
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to withdraw: "
						 - Print: "Error, that account has been disabled."
						 - File: No change

		Scenario: Verify user deposit transaction can no longer be done to a disabled account - admin. 
		Test Step: Enter the disabled account's correct account holder's name, account number, and an amount of money in the deposit feature.
		Test Input: login
					admin
					deposit
					Bran Bob
					12347
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to deposit: "
						 - Print: "Error, that account has been disabled."
						 - File: No change
		
		Scenario: Verify user paybill transaction can no longer be done to a disabled account - admin. 
		Test Step: Enter the disabled account's correct account holder's name, account number, company, and an amount of money to pay in the paybill feature.
		Test Input: login
					admin
					paybill
					Bran Bob
					12347
					The Bright Light Electric Company (EC)
					100
		Expected Result: Command is denied because the account is disabled.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to pay: "
						 - Print: "Error, that account has been disabled."
						 - File: No change
						
		Scenario: Verify user transfer transaction can no longer be done with a disabled account (From an account to a disabled account) - admin.  
		Test Step: Enter the disabled account's correct account holder's name and account number, another account number and an amount of money in the transfer feature.
		Test Input: login
					admin
					transfer
					Bran Bob
					12347
					12345
					100
		Expected Result: Command is denied because the account is disabled (disabled precedes valid account) - admin.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account has been is disabled"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a disabled account (From a disabled account to another account) - admin. 
		Test Step: Enter an account holder's name, account number, the disabled account number, and an amount of money in the transfer feature.
		Test Input: login
					admin
					transfer
					John Doe
					12345
					12347
					100
		Expected Result: Command is denied because the account is disabled (disabled precedes valid account).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account has been is disabled"
						 - File: No change

	Delete - Akira
	================

		Scenario: Verify account holder's name and account number correspond with each other (Incorrect name, correct number).
		Test Step: Admin enters an incorrect account holder's name but correct account number.
		Test Input: 
					login
					admin
					delete
					Bob Stevenson
				    12345
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, incorrect number).
		Test Step: Admin enters a correct account holder's name but incorrect account number.
		Test Input: 
					login
					admin
					delete
					John Doe
					11111
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.
		
		Scenario: Verify account holder's name and account number correspond with each other (Correct name, correct number but not matching).
		Test Step: Admin enters a correct account holder and correct account number but they do not correspond to each other.
		Test Input: 
					login
					admin
					delete
					John Doe
					12346
		Expected Result: The admin is notified the account is not valid.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account specificed is not a valid account."
						 - File: No change.

		Scenario: Verify normal users can not access the disable feature.
		Test Step: Normal user attempts to use the delete feature.
		Test Input:
					login
					standard
					John Doe
					delete
		Expected Result: The command is rejected.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Error, you do not have the correct privileges to access this feature."
						 - File: No change.
		
		Scenario: Verify admin can delete an account.
		Test Step: Admin enters a correct account holder, correct account number and they do correspond to each other.
		Test Input: 
					login
					admin
					delete
					John Doe
					12345
		Expected Result: The information is saved to the bank account transaction file saying that the account is now deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, John Doe's account is now deleted."
						 - File: "06 John Doe             12345 00000000 00"
		
		Scenario: Verify user withdraw transaction can no longer be done to a deleted account - user. 
		Test Step: Enter the deleted account's correct account holder's name, account number, and an amount of money in the withdraw feature.
		Test Input: login
					standard
					Bran Bob
					withdrawal
					12347
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Enter the amount of money you wish to withdraw: "
						 - Print: "Error, your account is deleted."
						 - File: No change
		
		Scenario: Verify user deposit transaction can no longer be done to a deleted account - user. 
		Test Step: Enter the deleted account's correct account holder's name, account number, and an amount of money in the deposit feature.
		Test Input: login
					standard
					Bran Bob
					deposit
					12347
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Enter the amount of money you wish to deposit: "
						 - Print: "Error, your account is deleted."
						 - File: No change
		
		Scenario: Verify user paybill transaction can no longer be done to a deleted account - user. 
		Test Step: Enter the deleted account's correct account holder's name, account number, company, and an amount of money to pay in the paybill feature.
		Test Input: login
					standard
					Bran Bob
					paybill
					12347
					The Bright Light Electric Company (EC)
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Please enter the company you wish to pay to: "
						 - Print: "Enter the amount of money you wish to pay: "
						 - Print: "Error, your account is deleted."
						 - File: No change
		
		Scenario: Verify delete transaction can still be done to a deleted account - user. 
		Test Step: Enter the deleted account's correct account holder's name and account number in the delete feature.
		Test Input: login
					admin
					delete
					Bran Bob
					12347
		Expected Result: Disabled account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Success, account has been deleted."
						 - File: "06 John Doe             12345 00000000 00"
		
		Scenario: Verify delete transaction can no longer be done to a deleted account - user. 
		Test Step: Enter the deleted account's correct account holder's name and account number in the delete feature.
		Test Input: login
					admin
					delete
					Bran Bob
					12347
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Error, account is already deleted"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a deleted account (From an account to a deleted account) - user. 
		Test Step: Enter the deleted account's correct account holder's name and account number, another account number and an amount of money in the transfer feature.
		Test Input: login
					standard
					Bran Bob
					transfer
					12347
					12345
					100
		Expected Result: Command is denied because the account is deleted (deleted precedes valid account).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, your account is deleted"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a deleted account (From a deleted account to another account) - user. 
		Test Step: Enter an account holder's name, account number, the deleted account number, and an amount of money in the transfer feature.
		Test Input: login
					standard
					John Doe
					transfer
					12345
					12347
					100
		Expected Result: Command is denied because the account is deleted (deleted precedes valid account).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account is deleted"
						 - File: No change

		Scenario: Verify user withdraw transaction can no longer be done to a deleted account - admin. 
		Test Step: Enter the deleted account's correct account holder's name, account number, and an amount of money in the withdraw feature.
		Test Input: login
					admin
					withdrawal
					Bran Bob
					12347
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to withdraw: "
						 - Print: "Error, that account has been deleted."
						 - File: No change

		Scenario: Verify user deposit transaction can no longer be done to a deleted account - admin. 
		Test Step: Enter the deleted account's correct account holder's name, account number, and an amount of money in the deposit feature.
		Test Input: login
					admin
					deposit
					Bran Bob
					12347
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to deposit: "
						 - Print: "Error, that account has been deleted."
						 - File: No change
		
		Scenario: Verify user paybill transaction can no longer be done to a deleted account - admin. 
		Test Step: Enter the deleted account's correct account holder's name, account number, company, and an amount of money to pay in the paybill feature.
		Test Input: login
					admin
					paybill
					Bran Bob
					12347
					The Bright Light Electric Company (EC)
					100
		Expected Result: Command is denied because the account is deleted.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Enter the amount of money you wish to pay: "
						 - Print: "Error, that account has been deleted."
						 - File: No change
						
		Scenario: Verify user transfer transaction can no longer be done with a deleted account (From an account to a deleted account) - admin.  
		Test Step: Enter the deleted account's correct account holder's name and account number, another account number and an amount of money in the transfer feature.
		Test Input: login
					admin
					transfer
					Bran Bob
					12347
					12345
					100
		Expected Result: Command is denied because the account is deleted (deleted precedes valid account) - admin.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account has been deleted"
						 - File: No change
		
		Scenario: Verify user transfer transaction can no longer be done with a deleted account (From a deleted account to another account) - admin. 
		Test Step: Enter an account holder's name, account number, the deleted account number, and an amount of money in the transfer feature.
		Test Input: login
					admin
					transfer
					John Doe
					12345
					12347
					100
		Expected Result: Command is denied because the account is deleted (deleted precedes valid account).
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the account holder's name: "
						 - Print: "Please enter the account number: "
						 - Print: "Please enter the account number to recieve money: "
						 - Print: "Error, that account has been deleted"
						 - File: No change

	Create - Akira
	================

		Scenario: Verify account creation (with valid input).
		Test Step: Admin enters an account holder's name that is under 20 characters and initial balance less than $99999.99 into the create feature.
		Test Input: login
					admin
					create
					Lock Lan
					200
		Expected Result: Information is saved to the bank account transaction file with this new information and a uniquely generated account number.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the new account holder's name: "
						 - Print: "Please enter their initial balance: "
						 - Print: "Success, account created."
						 - File: "05 Lock Lan             12345 00200.00 00"
		
		Scenario: Verify account creation (with invalid name input - to long).
		Test Step: Admin enters an account holder's name that is greater than 20 characters and initial balance less than $99999.99 into the create feature.
		Test Input: login
					admin
					create
					123456789012345678901
					100
		Expected Result: Transaction is allowed but the name is truncated to 20 characters.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the new account holder's name: "
						 - Print: "Please enter their initial balance: "
						 - Print: "Success, account created."
						 - File: "05 12345678901234567890 12345 00100.00 00"

		Scenario: Verify account creation (with invalid name input - used already).
		Test Step: Admin enters an account holder's name that is already used.
		Test Input: login
					admin
					create
					John Doe
					100
		Expected Result: Transaction is not allowed because the name is already taken.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the new account holder's name: "
						 - Print: "Please enter their initial balance: "
						 - Print: "Error, account name already taken."
						 - File: No Change.

		Scenario: Verify account creation (with invalid inital balance input).
		Test Step: Admin enters an account holder's name that is less than or equal to 20 characters and initial balance greater than $99999.99 into the create feature.
		Test Input: login
					admin
					create
					Lock Lan
					$199999.99
		Expected Result: Transaction is denied and the admin is notified that the initial balance is to much.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the new account holder's name: "
						 - Print: "Please enter their initial balance: "
						 - Print: "Error, initial account balance exceeds the allowed amount."
						 - File: No change
		
		Scenario: Verify account creation (with both inputs being invalid).
		Test Step: Admin enters an account holder's name that is greater than 20 characters and initial balance greater than $99999.99 into the create feature.
		Test Input: login
					admin
					create
					123456789012345678901
					$199999.99
		Expected Result: Transaction is denied and the admin is notified that the initial balance is to much.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a command admin: "
						 - Print: "Please enter the new account holder's name: "
						 - Print: "Please enter their initial balance: "
						 - Print: "Error, initial account balance exceeds the allowed amount."
						 - File: No change
		
		Scenario: Verify normal users can not access the create feature.
		Test Step: Normal user attempts to use the create feature.
		Test Input: login
					John Doe
					create
		Expected Result: The command is rejected.
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Error, you do not have the correct privileges to access this feature."
						 - File: No change
		
		Scenario: Verify account is not available in the same session.
		Test Step: A transaction is done with the newly created account holder's name and account number.
		Test Input: login
					standard
					Jack Nat
					withdrawal
					12349
					70
		Expected Result: Transaction is denied because the file hasn't been sent to the back end yet for processing (same session)
		Expected Output: - Print: "Please enter your session type: "
						 - Print: "Please enter a login name: "
						 - Print: "Please enter a command user: "
						 - Print: "Please enter your account number: "
						 - Print: "Please enter an amount to withdraw: "
						 - Print: "Error, this account can't be withdrawn from yet: "
						 - File: No change

Login – Alex
================

Scenario: Verify that user cannot login if another login session has been created.
Test Step: User Attempts to login when another person is logged in
Test Input: 
					login
					standard
					John Doe
					login
Expected Result: The user is notified that they must first logout before they attempt another login
Expected Output: - Print: "Please enter your session type: “
		   - Print: “Please enter your name: “
		   - Print: “Welcome John Doe please enter a command: “
		   - Print: “You are already logged in you must logout to attempt a new login”

Scenario: Verify that username exists when the user logs in.
Test Step: User Attempts to login when don’t currently have an account
Test Input: 
					login
					standard
					Bob Stevenson
Expected Result: The user is notified that they do not have a valid account and must speak to an admin before being able to login in. 
Expected Output: - Print: "Please enter your session type: “
		   - Print: “Please enter your name: “
   		   - Print: “Bob Stevenson you don’t seem to have an account please contact the 					  administrator to have an account setup.”

Scenario: Verify that users and admins have different privileges
Test Step: Use admin command as user and as admin
Test Input: 
					login
					standard
					John Doe
					disable
					logout
					login
					admin
					disable
					John Doe
					12345
Expected Result: User is unable to perform admin operation, and admin is able to perform operation 
Expected Output: - Print: “Please enter your session type: “
		   - Print: “Please enter your name: “
		   - Print: “Welcome John Doe please enter a command: “
   		   - Print: “Invalid command please enter a valid command”
		   - Print: “Have a nice day”
		   - Print: “Please enter your session type: “
		   - Print: “Please enter a command admin: "
		   - Print: “Please enter account holder’s name: “
		   - Print: “Please enter the account number: “
		   - Print: “Account removed”
		   - File: “07 John Doe 12345 00000000 00”

Scenario: Verify login must be perform before other commands can be used
Test Step: Use withdraw before user login
Test Input: 
					withdraw
Expected Result: User is unable to perform operation since they are not logged in
Expected Output: - Print: “You must be logged in to use this command”


Logout – Alex
================

Scenario: Verify logout is successful
Test Step: User is unable to use operations after logout
Test Input: 
					login
					standard
					John Doe
					logout
					withdrawal

Expected Result: User is unable to perform operations after logout 
Expected Output: - Print: “Please enter your session type: “
		   - Print: “Please enter your name: “
   		   - Print: “Invalid command please enter a valid command”
		   - Print: “Have a nice day”
		   - Print: “You are not logged in please login to use other commands”

Scenario: Verify logout cannot be done when user is not logged in
Test Step: Test logout before user is logged in
Test Input: 
					logout

Expected Result: User is unable to perform logout operation
Expected Output: - Print: “You are not logged in please login to use other commands”

Scenario: Verify receipt is given to the user   
Test Step: Use command that outputs to receipt and check receipt after logout
Test Input: 
					login
					standard
					John Doe
					withdraw
					12345
					100
					logout

Expected Result: User is unable to perform logout operation
Expected Output: - Print: “You are not logged in please login to use other commands”
		    - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Please enter your account number: ”
		    - Print: “Please enter the amount you want to withdraw: ”
		    - File: “07 John Doe 12345 00000100 01”
		    - Print “100 dollars has been withdrawn. Are there any other transactions you wish to 			      perform?: ”
		    - Print: “Have a nice day”
		    - File: “John Doe
  Withdrawal 100
  Current balance 100”

Transfer – Alex
================
Scenario: Verify account number for transfer  
Test Step: Use incorrect account number when transferring
Test Input: 
					login
					standard
					John Doe
					transfer
					12346

Expected Result: User is unable to transfer from a different account
Expected Output: - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Account number Invalid”

Scenario: Verify user cannot transfer to the same account
Test Step: Transfer to the same account
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12345

Expected Result: User is unable to transfer from a different account
Expected Output: - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “You cannot transfer to your own account”

Scenario: Verify user can transfer at the transfer zero dollars
Test Step: Attempt to transfer zero dollars 
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12346
					0

Expected Result: User is unable to transfer from a different account
Expected Output:  - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - Print: “You cannot transfer zero dollars”

Scenario: Verify user transfers incurs fees where the admin does not 
Test Step: Attempt to transfer money in user account and then in admin account
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12346
					100
					logout
					login
					transfer
					12345
					12346
					100

Expected Result: Account reduces 105 because of fees when user transfers, account reduces by 100 when admin transfers
Expected Output   - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - File: “Transfers account -105”
		    - Print: “Transfer complete”
		    - Print: “Have a great day”
		    - Print: "Please enter your session type: “
		    - Print: “Welcome please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - File: “Transfers account -105”
		    - Print: “Transfer complete”

Scenario: Verify max transfer  
Test Step: Test 1000 dollar transfer
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12346
					1000

Expected Result: Account reduces 1050 because of fees when user transfers
Expected Output   - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - File: “Transfers account -1050”

Scenario: Verify working transfer limit
Test Step: Test 1005 dollar transfer
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12346
					1005

Expected Result: Account reduces 1050 because of fees when user transfers
Expected Output   - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - Print: “You cannot transfer 1005 dollars it is beyond the transfer limit”

Scenario: Verify summing of transfers
Test Step: Test a 505 dollar transfer after 500 dollar transfer
Test Input: 
					login
					standard
					John Doe
					transfer
					12345
					12346
					500
					transfer
					12345
					12346
					505

Expected Result: Account reduces 1050 because of fees when user transfers
Expected Output   - Print: "Please enter your session type: “
		    - Print: “Please enter your name: “
		    - Print: “Welcome John Doe please enter a command: “
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - File: “Transfers account -505”
		    - Print: “Transfer complete”
		    - Print: “Enter your account number: ”
		    - Print: “Enter account number to transfer to: “
		    - Print: “Enter amount”
		    - Print: “You cannot transfer 505 dollars because you will go beyond the transfer limit
